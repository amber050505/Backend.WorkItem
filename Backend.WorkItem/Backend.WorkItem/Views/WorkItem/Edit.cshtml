@using Backend.WorkItem.Model
@model WorkItem
@{
    ViewData["Title"] = "編輯 Work Item";
}
<div class="container">
    <h2>編輯 Work Item</h2>
    @Html.ValidationSummary(excludePropertyErrors: true, message: "", htmlAttributes: new { @class = "text-danger" })
    <form id="editForm">
        @Html.AntiForgeryToken()
        <div class="form-group">
            <label>標題</label>
            <input asp-for="Title" class="form-control" />
            <span asp-validation-for="Title" class="text-danger"></span>
        </div>
        <div class="form-group">
            <label>描述</label>
            <textarea asp-for="Description" class="form-control"></textarea>
            <span asp-validation-for="Description" class="text-danger"></span>
        </div>
        <button type="submit" class="btn btn-primary" data-id="@Model.Id">儲存</button>
        <a class="btn btn-secondary" href="/WorkItem/List">返回</a>
    </form>
</div>

@section Scripts {
<script>
$(function(){
    $('#editForm').on('submit', function (e) {
        e.preventDefault();

        if(!($('form').valid())){
            return
        }

        const id = $(this).find('[type=submit]').data('id');
        const token = $('input[name="__RequestVerificationToken"]').val();
        const data = $(this).serialize();
    
        $.ajax({
            url: `/WorkItem/${id}`,
            type: 'PUT',
            headers: {
                'RequestVerificationToken': token
            },
            data: data,
            success: function () {
                alert('更新成功');
                window.location.href = '/WorkItem/List';
            },
            error: function (xhr) {
                alert(xhr.responseText);
            }
        });
    });
});
</script>
}
